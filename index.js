
const getLocalStornage=(name)=>{return window.localStorage.getItem(name);};const util={isSupportWebp:()=>{const isSupportWebp=getLocalStornage('isSupportWebp');if(isSupportWebp){return true;}
try{const isSupportWebp=document.createElement('canvas').toDataURL('image/webp',0.5).indexOf('data:image/webp')===0;setLocalStornage('isSupportWebp',true);return isSupportWebp;}catch(err){return false;}}}
class CanvasDistort{constructor(canvasConfig={width:800,height:800},imgStartX=0,imgStartY=0){const{width,height}=canvasConfig;this.canvas=document.createElement('canvas');this.canvas.width=width;this.canvas.height=height;this.ctx=this.canvas.getContext('2d');this.baseX=0;this.baseY=0;this.imgStartX=imgStartX;this.imgStartY=imgStartY;this.imgWidth=0;this.imgHeight=0;this.imgChangeObj={};this.imgData='';this.imgDataArr={};this.imgAnimateDataObj={};}
distort=(imgSrc,ctrlNodes,type,callback)=>{this.img=new Image();this.img.src=imgSrc;this.img.onload=()=>{this.ctx.clearRect(this.imgStartX,this.imgStartY,this.imgWidth,this.imgHeight);this.imgWidth=this.img.width;this.imgHeight=this.img.height;this.ctx.drawImage(this.img,this.imgStartX,this.imgStartY);this.baseX=this.imgStartX+this.imgWidth/2;this.baseY=this.imgStartY+this.imgHeight/2;this.imgData=this.ctx.getImageData(this.imgStartX,this.imgStartY,this.imgWidth,this.imgHeight);this.imgDataArr.origin=[];this.imgData.data.forEach((item,index)=>{this.imgDataArr.origin.push(item);});const imagedata=this.distortImg(ctrlNodes,type);callback(imagedata);};};distortImg=(ctrlNodes,type)=>{this.imgAnimateDataObj=this.sliceImgData(ctrlNodes,type);const canvasBg=document.createElement('canvas');canvasBg.width=this.imgWidth;canvasBg.height=this.imgHeight;const bgctx=canvasBg.getContext('2d');let imgData=bgctx.getImageData(0,0,this.imgWidth,this.imgHeight);this.imgAnimateDataObj.forEach((item,index)=>{imgData.data[index]=item;});bgctx.putImageData(imgData,0,0);const isSupportWebp=util.isSupportWebp();const imgType=isSupportWebp?'webp':'png';const imgBse64=canvasBg.toDataURL('image/'+imgType,1);return imgBse64;};sliceImgData=(ctrlNodes,type)=>{let arr=[];let bezierArr=[];let imgDataSlice=[];for(let i=0;i<1;i+=0.001){bezierArr.push(this.bezier(ctrlNodes,i));}
this.imgDataArr.origin.forEach((item,index)=>{this.imgData.data[index]=item;});bezierArr.forEach((obj,index)=>{if(this.imgStartY<obj.y&&this.imgStartY+this.imgHeight>obj.y&&type==='row'){let diffX=parseInt(obj.x-this.baseX,10);let dissY=parseInt(obj.y-this.imgStartY,10);let rowNum=dissY;imgDataSlice=this.imgData.data.slice(rowNum*this.imgWidth*4,rowNum*this.imgWidth*4+this.imgWidth*4);for(var i=0;i<Math.abs(diffX*4);i++){imgDataSlice=this.arraymove(diffX,imgDataSlice);}
this.imgChangeObj[rowNum]=imgDataSlice;}else if(this.baseX+this.imgWidth/2>obj.x&&this.baseX-this.imgWidth/2<obj.x&&type==='col'){let diffX=parseInt(obj.x-(this.baseX-this.imgWidth/2),10);let diffY=parseInt(obj.y-this.baseY,10);let rowNum=diffX;this.imgChangeObj[rowNum]={diffX:diffX,diffY:diffY,};}});if(type==='row'){Object.keys(this.imgChangeObj).forEach((item,index)=>{arr=arr.concat(Array.from(this.imgChangeObj[item]));});}else if(type==='col'){for(let i=0;i<this.imgWidth;i++){imgDataSlice=[];for(let j=0;j<this.imgHeight;j++){let index=j*this.imgWidth*4+i*4;let sliceArr=this.imgData.data.slice(index,index+4);imgDataSlice=imgDataSlice.concat(Array.from(sliceArr));}
if(this.imgChangeObj[i]){for(let k=0;k<Math.abs(this.imgChangeObj[i].diffY*4);k++){imgDataSlice=this.arraymove(this.imgChangeObj[i].diffY,imgDataSlice);}
for(let p=0;p<imgDataSlice.length/4;p++){arr[p*this.imgWidth*4+i*4]=imgDataSlice[p*4];arr[p*this.imgWidth*4+i*4+1]=imgDataSlice[p*4+1];arr[p*this.imgWidth*4+i*4+2]=imgDataSlice[p*4+2];arr[p*this.imgWidth*4+i*4+3]=imgDataSlice[p*4+3];}}}}
return arr;};arraymove=(type,arr)=>{let newArray=[];if(type>0){let lastOne=arr[arr.length-1];for(let i=0;i<arr.length-1;i++){newArray[i+1]=arr[i];}
newArray[0]=lastOne;}else{let firstOne=arr[0];for(let i=1;i<arr.length;i++){newArray[i-1]=arr[i];}
newArray[arr.length-1]=firstOne;}
return newArray;};factorial=(num)=>{if(num<=1){return 1;}else{return num*this.factorial(num-1);}};bezier=(arr,t)=>{let x=0,y=0,n=arr.length-1;arr.forEach((item,index)=>{if(!index){x+=item.x*Math.pow(1-t,n-index)*Math.pow(t,index);y+=item.y*Math.pow(1-t,n-index)*Math.pow(t,index);}else{x+=(this.factorial(n)/this.factorial(index)/this.factorial(n-index))*item.x*Math.pow(1-t,n-index)*Math.pow(t,index);y+=(this.factorial(n)/this.factorial(index)/this.factorial(n-index))*item.y*Math.pow(1-t,n-index)*Math.pow(t,index);}});return{x,y};};}
class Point2D{constructor(x,y,u,v){this.x=x;this.y=y;this.u=u;this.v=v;}
clone(){return new Point2D(this.x,this.y,this.u,this.v);}}
const DRAW_IMAGE_EXTEND_EX=3;class Vert2D{constructor(p0,p1,p2){this.p0=p0;this.p1=p1;this.p2=p2;}
clone(){return new Vert2D(this.p0,this.p1,this.p2);}
drawMeshLineToContext(plist,ctx){let p0=plist[this.p0],p1=plist[this.p1],p2=plist[this.p2];ctx.moveTo(p0.x,p0.y);ctx.lineTo(p1.x,p1.y);ctx.lineTo(p2.x,p2.y);ctx.lineTo(p0.x,p0.y);}
drawImageToContext(plist,img,ctx){let p0=plist[this.p0],p1=plist[this.p1],p2=plist[this.p2];Vert2D.drawImageToContextWithPoints(img,ctx,p0.x,p0.y,p1.x,p1.y,p2.x,p2.y,p0.u,p0.v,p1.u,p1.v,p2.u,p2.v);}
static extendVert(x0,y0,x1,y1,x2,y2){let x=2*x0-x1-x2,y=2*y0-y1-y2;let d=Math.sqrt(DRAW_IMAGE_EXTEND_EX/(x*x+y*y));return[x0+x*d,y0+y*d];}
static drawImageToContextWithPoints(img,ctx,x0,y0,x1,y1,x2,y2,u0,v0,u1,v1,u2,v2){u0*=img.width;u1*=img.width;u2*=img.width;v0*=img.height;v1*=img.height;v2*=img.height;let s0=Vert2D.extendVert(x0,y0,x1,y1,x2,y2);let s1=Vert2D.extendVert(x1,y1,x0,y0,x2,y2);let s2=Vert2D.extendVert(x2,y2,x1,y1,x0,y0);ctx.beginPath();ctx.moveTo(s0[0],s0[1]);ctx.lineTo(s1[0],s1[1]);ctx.lineTo(s2[0],s2[1]);ctx.closePath();x1-=x0;y1-=y0;x2-=x0;y2-=y0;u1-=u0;v1-=v0;u2-=u0;v2-=v0;let det=1/(u1*v2-u2*v1),a=(v2*x1-v1*x2)*det,b=(v2*y1-v1*y2)*det,c=(u1*x2-u2*x1)*det,d=(u1*y2-u2*y1)*det,e=x0-a*u0-c*v0,f=y0-b*u0-d*v0;ctx.save();ctx.transform(a,b,c,d,e,f);ctx.clip();ctx.drawImage(img,0,0);ctx.restore();}}
class Mesh2D{constructor(){this.points=[];this.verts=[];}
clone(){let n=new Mesh2D();for(let i=0;i<this.points.length;i++){n.points[i]=this.points[i].clone();}
for(let i=0;i<this.verts.length;i++){n.verts[i]=this.verts[i];}
return n;}
move(x,y){for(let i=0;i<this.points.length;i++){this.points[i].x+=x;this.points[i].y+=y;}}
changeByMatrix4(te){for(let i=0;i<this.points.length;i++){this.points[i].changeByMatrix4(te);}}
drawImageToContext(img,ctx){for(let i=0;i<this.verts.length;i++){this.verts[i].drawImageToContext(this.points,img,ctx);}}
static createMapMesh(width,height,divW,divH){let m=new Mesh2D();let widthSingle=width/divW,heightSingle=height/divH;let uSingle=1/divW,vSingel=1/divH;for(let i=0;i<=divH;i++){for(let j=0;j<=divW;j++){m.points.push(new Point2D(j*widthSingle,i*heightSingle,j*uSingle,i*vSingel));}}
for(let i=0;i<divH;i++){for(let j=0;j<divW;j++){let startPoint=(divW+1)*i+j;m.verts.push(new Vert2D(startPoint+1,startPoint,startPoint+divW+1));m.verts.push(new Vert2D(startPoint+divW+1,startPoint+divW+2,startPoint+1));}}
return m;}}
class Mumeric{static dim(x){let y,z;if(typeof x==='object'){y=x[0];if(typeof y==='object'){z=y[0];if(typeof z==='object'){return numeric._dim(x);}
return[x.length,y.length];}
return[x.length];}
return[];}
static _foreach2(x,s,k,f){if(k===s.length-1){return f(x);}
let i,n=s[k],ret=Array(n);for(i=n-1;i>=0;i--){ret[i]=this._foreach2(x[i],s,k+1,f);}
return ret;}
static cloneV(x){let _n=x.length;let i,ret=Array(_n);for(i=_n-1;i!==-1;--i){ret[i]=x[i];}
return ret;}
static clone(x){if(typeof x!=='object')return x;let V=this.cloneV;let s=this.dim(x);return this._foreach2(x,s,0,V);}
static diag(d){let i,i1,j,n=d.length,A=Array(n),Ai;for(i=n-1;i>=0;i--){Ai=Array(n);i1=i+2;for(j=n-1;j>=i1;j-=2){Ai[j]=0;Ai[j-1]=0;}
if(j>i){Ai[j]=0;}
Ai[i]=d[i];for(j=i-1;j>=1;j-=2){Ai[j]=0;Ai[j-1]=0;}
if(j===0){Ai[0]=0;}
A[i]=Ai;}
return A;}
static rep(s,v,k){if(typeof k==='undefined'){k=0;}
let n=s[k],ret=Array(n),i;if(k===s.length-1){for(i=n-2;i>=0;i-=2){ret[i+1]=v;ret[i]=v;}
if(i===-1){ret[0]=v;}
return ret;}
for(i=n-1;i>=0;i--){ret[i]=this.rep(s,v,k+1);}
return ret;}
static identity(n){return this.diag(this.rep([n],1));}
static inv(a){let s=this.dim(a),abs=Math.abs,m=s[0],n=s[1];let A=this.clone(a),Ai,Aj;let I=this.identity(m),Ii,Ij;let i,j,k,x;for(j=0;j<n;++j){let i0=-1;let v0=-1;for(i=j;i!==m;++i){k=abs(A[i][j]);if(k>v0){i0=i;v0=k;}}
Aj=A[i0];A[i0]=A[j];A[j]=Aj;Ij=I[i0];I[i0]=I[j];I[j]=Ij;x=Aj[j];for(k=j;k!==n;++k)Aj[k]/=x;for(k=n-1;k!==-1;--k)Ij[k]/=x;for(i=m-1;i!==-1;--i){if(i!==j){Ai=A[i];Ii=I[i];x=Ai[j];for(k=j+1;k!==n;++k)Ai[k]-=Aj[k]*x;for(k=n-1;k>0;--k){Ii[k]-=Ij[k]*x;--k;Ii[k]-=Ij[k]*x;}
if(k===0)Ii[0]-=Ij[0]*x;}}}
return I;}
static dotMMsmall(x,y){let i,j,k,p,q,r,ret,foo,bar,woo,i0;p=x.length;q=y.length;r=y[0].length;ret=Array(p);for(i=p-1;i>=0;i--){foo=Array(r);bar=x[i];for(k=r-1;k>=0;k--){woo=bar[q-1]*y[q-1][k];for(j=q-2;j>=1;j-=2){i0=j-1;woo+=bar[j]*y[j][k]+bar[i0]*y[i0][k];}
if(j===0){woo+=bar[0]*y[0][k];}
foo[k]=woo;}
ret[i]=foo;}
return ret;}
static dotMV(x,y){let p=x.length,i;let ret=Array(p);for(i=p-1;i>=0;i--){ret[i]=this.dotVV(x[i],y);}
return ret;}
static dotVV(x,y){let i,n=x.length,i1,ret=x[n-1]*y[n-1];for(i=n-2;i>=1;i-=2){i1=i-1;ret+=x[i]*y[i]+x[i1]*y[i1];}
if(i===0){ret+=x[0]*y[0];}
return ret;}
static transpose(x){let i,j,m=x.length,n=x[0].length,ret=Array(n),A0,A1,Bj;for(j=0;j<n;j++)ret[j]=Array(m);for(i=m-1;i>=1;i-=2){A1=x[i];A0=x[i-1];for(j=n-1;j>=1;--j){Bj=ret[j];Bj[i]=A1[j];Bj[i-1]=A0[j];--j;Bj=ret[j];Bj[i]=A1[j];Bj[i-1]=A0[j];}
if(j===0){Bj=ret[0];Bj[i]=A1[0];Bj[i-1]=A0[0];}}
if(i===0){A0=x[0];for(j=n-1;j>=1;--j){ret[j][0]=A0[j];--j;ret[j][0]=A0[j];}
if(j===0){ret[0][0]=A0[0];}}
return ret;}}
class Perspective{constructor(srcPts,dstPts){this.srcPts=srcPts;this.dstPts=dstPts;this.coeffs=this.getNormalizationCoefficients(this.srcPts,this.dstPts,false);this.coeffsInv=this.getNormalizationCoefficients(this.srcPts,this.dstPts,true);}
getNormalizationCoefficients(srcPts,dstPts,isInverse){if(isInverse){let tmp=dstPts;dstPts=srcPts;srcPts=tmp;}
let r1=[srcPts[0],srcPts[1],1,0,0,0,-1*dstPts[0]*srcPts[0],-1*dstPts[0]*srcPts[1],];let r2=[0,0,0,srcPts[0],srcPts[1],1,-1*dstPts[1]*srcPts[0],-1*dstPts[1]*srcPts[1],];let r3=[srcPts[2],srcPts[3],1,0,0,0,-1*dstPts[2]*srcPts[2],-1*dstPts[2]*srcPts[3],];let r4=[0,0,0,srcPts[2],srcPts[3],1,-1*dstPts[3]*srcPts[2],-1*dstPts[3]*srcPts[3],];let r5=[srcPts[4],srcPts[5],1,0,0,0,-1*dstPts[4]*srcPts[4],-1*dstPts[4]*srcPts[5],];let r6=[0,0,0,srcPts[4],srcPts[5],1,-1*dstPts[5]*srcPts[4],-1*dstPts[5]*srcPts[5],];let r7=[srcPts[6],srcPts[7],1,0,0,0,-1*dstPts[6]*srcPts[6],-1*dstPts[6]*srcPts[7],];let r8=[0,0,0,srcPts[6],srcPts[7],1,-1*dstPts[7]*srcPts[6],-1*dstPts[7]*srcPts[7],];let matA=[r1,r2,r3,r4,r5,r6,r7,r8];let matB=dstPts;let matC;try{matC=Mumeric.inv(Mumeric.dotMMsmall(Mumeric.transpose(matA),matA));}catch(e){return[1,0,0,0,1,0,0,0];}
let matD=Mumeric.dotMMsmall(matC,Mumeric.transpose(matA));let matX=Mumeric.dotMV(matD,matB);for(let i=0;i<matX.length;i++){matX[i]=Math.round(matX[i]*10000000000)/10000000000;}
matX[8]=1;return matX;}
static transform(x,y){let coordinates=[];coordinates[0]=(this.coeffs[0]*x+this.coeffs[1]*y+this.coeffs[2])/(this.coeffs[6]*x+this.coeffs[7]*y+1);coordinates[1]=(this.coeffs[3]*x+this.coeffs[4]*y+this.coeffs[5])/(this.coeffs[6]*x+this.coeffs[7]*y+1);return coordinates;}
static transformFun(x,y,coeffs){let coordinates=[];coordinates[0]=(coeffs[0]*x+coeffs[1]*y+coeffs[2])/(coeffs[6]*x+coeffs[7]*y+1);coordinates[1]=(coeffs[3]*x+coeffs[4]*y+coeffs[5])/(coeffs[6]*x+coeffs[7]*y+1);return coordinates;}
static transformInverse(x,y){let coordinates=[];coordinates[0]=(this.coeffsInv[0]*x+this.coeffsInv[1]*y+this.coeffsInv[2])/(this.coeffsInv[6]*x+this.coeffsInv[7]*y+1);coordinates[1]=(this.coeffsInv[3]*x+this.coeffsInv[4]*y+this.coeffsInv[5])/(this.coeffsInv[6]*x+this.coeffsInv[7]*y+1);return coordinates;}}
class CanvasManager{constructor(canvasConfig={width:600,height:600}){const{width,height}=canvasConfig;this.canvas=document.createElement('canvas');this.canvas.width=width;this.canvas.height=height;const itemWidth=width;const itemHeight=height;const viewPortOffsetX=0;const viewPortOffsetY=0.5;const viewPortWidth=width;const viewPortHeight=height;const viewPortCoordinates=[{x:viewPortOffsetX,y:viewPortOffsetY,},{x:viewPortOffsetX+viewPortWidth,y:viewPortOffsetY,},{x:viewPortOffsetX+viewPortWidth,y:viewPortOffsetY+viewPortHeight,},{x:viewPortOffsetX,y:viewPortOffsetY+viewPortHeight,},];this.viewPort=viewPortCoordinates;this.events={};this.ctx=this.canvas.getContext('2d');this.ctx.fillStyle='rgba(255, 255, 255, 0.0)';this.ctx.fillRect(0,0,width,height);const centerX=width/2;const centerY=height/2;this.ctx.translate(centerX,centerY);this.setImageDimension(width,width);}
setImageDimension=(imgW,imgH,divW=10,divH=10)=>{this.model=Mesh2D.createMapMesh(imgW,imgH,divW,divH);return this;};setImageCoordinates=()=>{this.srcPoints=this.viewPort;return this;};setOutputCoordinates=(coordinates)=>{this.dstPoints=coordinates;return this;};translate=(offsetX,offsetY)=>{this.model.move(offsetX,offsetY);return this;};perspective=()=>{let n=this.srcPoints;let l=this.dstPoints;let e=[n[0].x,n[0].y,n[1].x,n[1].y,n[2].x,n[2].y,n[3].x,n[3].y];let t=[l[0].x,l[0].y,l[1].x,l[1].y,l[2].x,l[2].y,l[3].x,l[3].y];let perspT=new Perspective(e,t);const{coeffs}=perspT;for(let e=0;e<this.model.points.length;e++){let t=Perspective.transformFun(this.model.points[e].x,this.model.points[e].y,coeffs);(this.model.points[e].x=t[0]),(this.model.points[e].y=t[1]);}
return this;return this;};clear=()=>{this.ctx.save();this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);this.ctx.restore();return this;};genImg=(canvasArea,imgBase64,moveX,moveY)=>{return new Promise((resolve)=>{this.setImageCoordinates();this.setOutputCoordinates(canvasArea);this.perspective();this.clear();const img=new Image();if(imgBase64.search('base64')!=-1){img.src=imgBase64;}else if(imgBase64.search('x-oss-process')!=-1){img.src=imgBase64.split('?')[0]+'?time='+new Date().getTime();}else{img.src=imgBase64+'?time='+new Date().getTime();}
img.setAttribute('crossOrigin','Anonymous');const isSupportWebp=util.isSupportWebp();const type=isSupportWebp?'webp':'png';img.onload=()=>{this.model.drawImageToContext(img,this.ctx);const base64=this.canvas.toDataURL('image/'+type,1);resolve(base64);};});};}
const stringToArray=(arr,canvasOptions)=>{const arrList=[];let{width,height}=canvasOptions;const defaultWidth=800;const defaultHeight=800;let scaleX=1;let scaleY=1;if(width){scaleX=width/defaultWidth;scaleY=height/defaultHeight;}
for(let i=0;i<arr.length;i++){const item={x:arr[i].split(',')[0]*scaleX,y:arr[i].split(',')[1]*scaleY,};arrList.push(item);}
return arrList;};class HistoryManager{constructor(){this.HISTORY=[];this.currentBalde=0;this.doms=[];this.stepMark=0;}
init(data){if(this.HISTORY.length)return;data.bladeImgInfoList.forEach((item)=>{const history={color:{},pattern:{},text:{}}
this.HISTORY.push(history)});}
find(obj){let type=this.getObjType(obj);if(!type)return;let id=obj.getAttribute(type+'id');if(!this.HISTORY[this.currentBalde][type][type+id])return[];return this.HISTORY[this.currentBalde][type][type+id][this.HISTORY[this.currentBalde][type][type+id].length-1];}
delete(obj){}
getDom(action){if(!this.doms[this.currentBalde].length)return'';let dom='';if(action==='next'){this.stepMark+=1;}
if(action==='pre'){this.stepMark-=1;}
if(this.stepMark<=0){this.stepMark=0;return'';}
if(!this.doms[this.currentBalde][this.stepMark]){this.stepMark-=1;return'';}
dom=this.doms[this.currentBalde][this.stepMark]||this.doms[this.currentBalde][this.stepMark-1];return dom;}
saveDom(dom){if(!dom.childNodes.length)return;if(!this.doms[this.currentBalde]){this.doms[this.currentBalde]=[];}
if(this.doms[this.currentBalde].length>=10){this.doms[this.currentBalde].shift();}
this.doms[this.currentBalde].push(dom);this.stepMark=this.doms[this.currentBalde].length-1;}
add(obj){let type=this.getObjType(obj);let info=this.getInfo(obj,type);let key=type+info.id;if(!this.HISTORY[this.currentBalde][type][key]){Object.assign(this.HISTORY[this.currentBalde][type],{[key]:[]});}
if(this.HISTORY[this.currentBalde][type][key]&&this.HISTORY[this.currentBalde][type][key].length===10){this.HISTORY[this.currentBalde][type][key].shift();}
this.HISTORY[this.currentBalde][type][key].push(info);}
getInfo(obj,type){if(!obj)return{};const info={type:type,id:obj.getAttribute('colorid')||obj.getAttribute('patternid'),width:obj.clientWidth,height:obj.clientHeight,left:obj.offsetLeft,top:obj.offsetTop,transform:obj.style.transform,zIndex:obj.style.zIndex,};if(type==='pattern'){info.src=obj.src;}
if(type==='color'){info.colorType=obj.getAttribute('colortype');}
return info;}
getObjType(obj){if(!obj)return false;return obj.getAttribute('data-type')}}
const point2D=Point2D;const vert2D=Vert2D;const mesh2D=Mesh2D;const perspective=Perspective;const canvasManager=CanvasManager;const discord=CanvasDistort;const $=(val)=>{let name='';let symble='';if(val.includes('#')){symble='#';}
if(val.includes('.')){symble='.';}
name=val.split(symble);let res=symble==='#'?document.getElementById(name[1]):document.getElementsByClassName(name[1]);res.attr=function(val){return this.getAttribute('val');}
return res;}
const _toast=(msg)=>{let msgBox=document.createElement('div');msgBox.innerText=msg;msgBox.className='_toast';$('#editor').appendChild(msgBox);setTimeout(()=>{msgBox.style.top='0';})setTimeout(()=>{msgBox.style.top='-30px';msgBox.remove();},2000)}
export
default class IYWDesigner{constructor({id,previewBox,selectedInfo={info:{}},exportSize=800,maxItemNum=6,colorMax=5,toast}){this.toast=toast||_toast;this.editorContainer='';this.selectedInfo=selectedInfo;this.exportSize=exportSize;this.exportObj=null;this.canvasSize=600;this._currentBlade=0;this.colorMax=colorMax;this.frame=null;this.id=id;this.previewBox=previewBox;this.image=null
this.editorBox=null;this.disX=null;this.disY=null;this.sampleStatus=0;this.currentAction='';this.cropper=null;this.previewImgContainer=null;this.onMoveObj=null;this.defaultSample=null;this.isDrag=false;this.isHold=false;this.isTopHold=false;this.previewCacheBig=[]this.isBottomHold=false;this.isLeftpHold=false;this.isRightpHold=false;this.isLeftTopHold=false;this.isLeftBottom=false;this.isBottomRight=false;this.historyManage=new HistoryManager();this.angel=0;this.objDefParams={};this.defaultLeft=0;this.defaultTop=0;this.dataVersion='new';this.controlElIndex=null;this.elementsParent=null;this.layers=[];this.previewCache=[];this.ctlCahche=[];this.contentCache=[];this.maxItemNum=maxItemNum;Object.defineProperty(this,'currentBlade',{get(){return this._currentBlade},set(newVal){if(newVal!=this._currentBlade){this.historyManage.currentBalde=newVal;this._currentBlade=newVal;}}});this.pointA={x:0,y:0,};this.pointB={x:0,y:0,};this.pointC={x:0,y:0};this.allAngel=0;this.count=0;this.colorConfig={size:300,data:[]}
this.frameParentName="editor-ctrl";this.designContents={bladeList:[{bladeImg:"https://chdesign.oss-cn-shanghai.aliyuncs.com/test/CUMS/OA/20211111/163662509799073626.png",bladeName:"刀片1",contents:{images:null,colorPiece:[],text:[],renderImg:[]}},{},{},{},{},],template:null}
this.blade={set:(val)=>{this.onMoveObj&&this.beforeBladeChange();this.currentBlade=val;if(!this.defaultSample)return;this.historyManage.init(this.defaultSample.bladeImgInfoList)const temp={...this.defaultSample};const scene=document.getElementById('previewBoxSmall');this.switchScene(Array.from(scene.childNodes));let data={bladeImg:temp.bladeImgInfoList[val].bladeImg,bladeName:temp.bladeImgInfoList[val].bladeName,contents:{images:null,colorPiece:[],text:[],renderImg:[]}}
if(this.designContents.bladeList[val]){this.designContents.bladeList[val]=Object.assign(this.designContents.bladeList[val],data);}else{this.designContents.bladeList[val]=data}
this.clearEditor();this.afterBladeChange();return this;},get:()=>{return this.currentBlade;},replace:()=>{},find:()=>{},getCurrentBlade:(badeIndex,colorIndex)=>{return this.defaultSample.baseImgInfoList[this.currentBlade].bladeInfoList[colorIndex]}}
this.framePoints=["top","top-left","top-right","left","left-bottom","bottom","bottom-right","right"]}
getPreviewDom(){return this.previewImgContainer.innerHTML;}
getBladeDesignCtx(){return this.designContents.bladeList[this.currentBlade];}
beforeBladeChange(){if($('#previewBoxSmall')){this.previewCache[this.currentBlade]=$('#previewBoxSmall').innerHTML;this.previewCacheBig[this.currentBlade]=this.previewImgContainer.innerHTML;const contentData=Array.from(this.elementsParent.childNodes);this.contentCache[this.currentBlade]=contentData;const ctrArr=Array.from(this.editorBox.childNodes);this.ctlCahche[this.currentBlade]=[];ctrArr.forEach((item)=>{if(item.className.includes('ctl')){this.ctlCahche[this.currentBlade].push(item);}})}}
afterBladeChange(){if(this.dataVersion==='old'){if(this.previewCache[this.currentBlade]){this.previewImgContainer.innerHTML=this.previewCacheBig[this.currentBlade];}}
if(this.contentCache[this.currentBlade]){this.contentCache[this.currentBlade].forEach((item,index)=>{this.elementsParent.appendChild(item);if(index==this.contentCache[this.currentBlade].length-1){this.onMoveObj=item;}})}
if(this.ctlCahche[this.currentBlade]){this.ctlCahche[this.currentBlade].forEach((item)=>{this.editorBox.appendChild(item);})}
if(this.dataVersion==='new'){this.previewImgContainer.innerHTML=$('#previewBoxSmall').childNodes[0].innerHTML;}}
getCurrentDesign(){return this.designContents.bladeList[this.currentBlade].contents;}
clearEditor(){this.onMoveObj=null;this.elementsParent.innerHTML='';this.hideFrame();this.clearCtl();this.clearPreview();}
clearCtl(){const ctrArr=Array.from(this.editorBox.childNodes);ctrArr.forEach((item)=>{if(item.className.includes('ctl')){item.remove();}})}
clearPreview(){const preArr=Array.from(this.findElementByClass(this.previewBox,'preview-container').childNodes);preArr.forEach((item)=>{if(item.className!='sample'){item.remove();}});this.clearSmallView();}
clearSmallView(){const previewSmall=Array.from($('#previewBoxSmall').childNodes);previewSmall.forEach((item)=>{Array.from(item.childNodes).forEach((t)=>{if(t.className!='sample'){t.remove();}})})}
showFrame(){this.frame.style.opacity='1';}
hideFrame(){this.frame.style.opacity='0';}
createExportSingle(){let canvas=this.createElement({type:'div',id:'compositeCan'});canvas.style.width=this.exportSize+'px';canvas.style.height=this.exportSize+'px';this.insertElement(document.getElementsByTagName('body')[0],canvas);}
useCropper(copper,shape='square'){this.createDialogForCropper(shape);const img=$('#imgForClip');if(copper){this.cropper=new copper(img,{aspectRatio:1,viewMode:1,ready:function(){if(shape==='circle'){$('.cropper-crop-box')[0].style.borderRadius='50%';$('.cropper-crop-box')[0].style.overflow='hidden';$('.cropper-face')[0].style.borderRadius='50%';$('.cropper-view-box')[0].style.borderRadius='50%';}}});}}
getRoundedCanvas(sourceCanvas){let canvas=document.createElement('canvas');let context=canvas.getContext('2d');let width=sourceCanvas.width;let height=sourceCanvas.height;canvas.width=width;canvas.height=height;context.imageSmoothingEnabled=true;context.drawImage(sourceCanvas,0,0,width,height);context.globalCompositeOperation='destination-in';context.beginPath();context.arc(width/2,height/2,Math.min(width,height)/2,0,2*Math.PI,true);context.fill();return canvas;}
createDialogForCropper(shape){const dialog=this.createElement({type:'div',className:'iyw-dialog'});let diaLogBody=this.createElement({type:'div',className:'dialog-body'});let diaLogImg=this.createElement({type:'img',id:'imgForClip'});let clipContainer=this.createElement({type:'div',className:'clip-container'})
let dialogFoot=this.createElement({type:'div',className:'clip-footer'})let confirmButton=this.createElement({type:'button',className:'clip-confirm'});let cancelButton=this.createElement({type:'button',className:'clip-cancel'});confirmButton.innerText='确定';cancelButton.innerText='取消';const closeDialog=()=>{dialog.remove();this.cropper=null;}
confirmButton.onclick=()=>{const _index=this.currentBlade;let clippedImg='';if(shape==='circle'){clippedImg=this.getRoundedCanvas(this.cropper.getCroppedCanvas()).toDataURL('image/png');}else{clippedImg=this.cropper.getCroppedCanvas().toDataURL('image/png')}
Object.assign(this.designContents.bladeList[_index].contents.images,{canvasImg:clippedImg});this.addImage(this.designContents.bladeList[_index].contents.images);closeDialog();}
cancelButton.onclick=()=>{closeDialog();}
diaLogImg.src=this.onMoveObj.src;clipContainer.appendChild(diaLogImg);diaLogBody.appendChild(clipContainer);dialogFoot.appendChild(cancelButton);dialogFoot.appendChild(confirmButton);diaLogBody.appendChild(dialogFoot);dialog.appendChild(diaLogBody);this.insertElement(document.getElementById('app'),dialog);}
saveLatestInfo(){if(!this.onMoveObj)return;const _this=this;_this.objDefParams.left=_this.onMoveObj.offsetLeft;_this.objDefParams.top=_this.onMoveObj.offsetTop;_this.objDefParams.width=_this.onMoveObj.clientWidth;_this.objDefParams.height=_this.onMoveObj.clientHeight;}
addEventsForEditor(){const fixColorDelete=()=>{if(!_this.colorConfig.data.length){if(_this.hasEditImage()){_this.onMoveObj=_this.hasEditImage();let{offsetLeft,offsetTop}=_this.onMoveObj;_this.asyncPositionForFrame(_this.onMoveObj,offsetLeft,offsetTop);}}}
let _this=this;const mouseDownHandle={isDrag:'onMove',isHold:'onRotate',isTopHold:'topOnMove',isLeftHold:'leftOnMove',isRightHold:'rightOnMove',isBottomHold:'bottomOnMove',isTopLeftHold:'leftTopOnMove',isLeftBottomHold:'leftBottomOnMove',isBottomRightHold:'bottomRightOnMove'};const stopMove=(e)=>{Object.keys(mouseDownHandle).forEach(item=>{_this[item]=false;})if(_this&&_this.onMoveObj){_this.saveLatestInfo();_this.pointA.x=_this.onMoveObj.offsetWidth/2+_this.onMoveObj.offsetLeft;_this.pointA.x=_this.onMoveObj.offsetHeight/2+_this.onMoveObj.offsetTop;_this.onMoveObj.style.cursor="default";_this.frame.style.cursor="default";}
if(_this.currentAction==='rotate'){_this.genImgForAction('rotate');}}
this.editorBox.addEventListener('mousedown',function(e){if(e.target.className==='editor-box')return;if(!_this.elementsParent.childNodes.length){_this.onMoveObj=null;fixColorDelete();_this.hideFrame();_this.getCanvasSize();return;}
_this.saveLatestInfo();_this.isDrag=true;_this.frame.style.pointerEvents='none';_this.showFrame();if(e.target.id!=='elementsParent'&&e.target.id!==_this.id&&e.target.nodeName!=='SPAN'){_this.focusSelectedItem(e.target);if(!_this.onMoveObj){_this.hideFrame();_this.isDrag=false;return;}
_this.isDrag=true;_this.frame.style.cursor="move";_this.onMoveObj.style.cursor='move';e=e||window.event;_this.isDrag=true;let x=e.clientX,y=e.clientY;_this.disX=x-_this.onMoveObj.offsetLeft;_this.disY=y-_this.onMoveObj.offsetTop;}else{_this.isDrag=false;}},false)this.editorContainer.onmousemove=function(e){if(!_this.objDefParams&&_this.onMoveObj){}
Object.keys(mouseDownHandle).forEach(item=>{if(_this[item]){let runMethod=mouseDownHandle[item];_this[runMethod](e);}});};this.editorContainer.onmouseup=function(e){if(_this.onMoveObj){_this.saveLatestInfo();_this.showAllColorCtl('block');stopMove(e);}else{return;}
_this.editorBox.onmouseup=function(e){if(!_this.onMoveObj)return;let lastStep=_this.historyManage.find(_this.onMoveObj);let type=_this.getElementType();let currentData=_this.historyManage.getInfo(_this.onMoveObj,type);_this.selectedInfo.info=_this.createObjInfo();if(JSON.stringify(lastStep)!=JSON.stringify(currentData)){_this.loadingPreview.style.display='block';_this.asyncPosition(_this.previewBox);}}};this.editorContainer.onkeydown=function(e){const target=_this.onMoveObj;let event=e||window.e;switch(event.keyCode){case 37:target.style.left=target.offsetLeft-5+'px';break;case 39:target.style.left=target.offsetLeft+5+'px';break;case 38:target.style.top=target.offsetTop-5+'px';break;case 40:target.style.top=target.offsetTop+5+'px';break;}
_this.asyncPosition(_this.previewBox);return false;}}
init(){if(!this.id){this.toast("必须传入一个有效的元素ID");return;}
if(!document.getElementById(this.id)){this.toast("ID 元素不存在");return;}
if(this.previewBox){this.previewBox=document.getElementById(this.previewBox);let loadingBoxParent=this.createElement({type:'div',className:'loading-box'});let loadingContext=this.createElement({type:'div',className:'loader'});let previewContainer=this.createElement({type:'div',className:"preview-container"})loadingBoxParent.appendChild(loadingContext);this.insertElement(this.previewBox,previewContainer);this.insertElement(this.previewBox,loadingBoxParent);this.loadingPreview=loadingBoxParent;loadingBoxParent.style.display='none';}
this.editorBox=document.getElementById(this.id);this.editorContainer=this.editorBox.parentNode;this.editorBox.style.pointerEvents='auto';const EDITOR=this.editorBox;this.getCanvasSize();if(!this.defaultLeft&&!this.defaultTop){const move=this.createElement({type:'div',id:'move'});this.insertElement(EDITOR,move);this.frame=move;this.elementsParent=this.createElement({type:'div',id:'elementsParent'});this.insertElement(EDITOR,this.elementsParent);this.createFramePoints(this.frame);this.createExportBox();}
this.createExportSingle();this.hideFrame();this.addEventsForEditor();}
createExportBox(){if(!document.getElementById('element-for-export')){let elementForExport=this.createElement({id:'element-for-export',type:'div'});elementForExport.style.width=this.exportSize+'px';elementForExport.style.height=this.exportSize+'px';elementForExport.style.position='absolute';elementForExport.style.zIndex='-90';elementForExport.style.right='0';elementForExport.style.bottom='0';elementForExport.style.pointerEvents='none';let body=document.getElementsByTagName('body')[0];this.insertElement(body,elementForExport);this.exportObj=elementForExport;this.insertElement(this.exportObj,this.createElement({type:'div',className:'preview-container'}));}}
createElement({type='',id='',className=''}){let Element=document.createElement(type);if(id)Element.id=id;if(className)Element.className=className;return Element;}
insertElement(parent,element){if(!parent||!element)return;parent.appendChild(element)}
setDataVersion(data){let version='new';if(data.baseImgInfoList[0].bladeInfoList){if(data.baseImgInfoList[0].bladeInfoList[0].p1){version='old';}}
this.dataVersion=version;}
clearCache(){this.previewCache=[];this.contentCache=[];this.ctlCahche=[];}
setTemp(sampleInfo){this.defaultSample={...sampleInfo};if(!this.historyManage.HISTORY.length){this.historyManage.init(sampleInfo);}
const bladeImg=this.findElementByClass(this.editorBox,'bladeImg');if(!sampleInfo.bladeImgInfoList[this.currentBlade]){this.sampleStatus=0;throw new Error('blade info is empty, found tId == '+sampleInfo.tId)}
this.sampleStatus=1;this.setDataVersion({...sampleInfo})let bladeImage=sampleInfo.bladeImgInfoList[this.currentBlade].bladeImg;if(bladeImg){bladeImg.src=bladeImage;}else{let _bladeImg=this.createElement({type:'img',className:'bladeImg'});_bladeImg.src=bladeImage;_bladeImg.style.pointerEvents='none';this.insertElement(this.editorBox,_bladeImg);}
this.resetTemplate()
let sampleData={...sampleInfo};sampleData.src=sampleInfo.baseImgInfoList[this.currentBlade]?sampleInfo.baseImgInfoList[this.currentBlade].baseImg:sampleInfo.baseImgInfoList[0].baseImg;let _container=this.searchNode(this.previewBox,'preview-container');let el=this.createElement({type:'img'});el.setAttribute('imgtype','sample');el.src=sampleData.src;el.style.width='100%';el.style.zIndex='20';this.previewImgContainer=_container;this.addToPreviewSmall(el,_container);}
resetTemplate(){this.elementsParent.innerHTML='';this.clearCache();let preview=this.findElementByClass(this.previewBox,'preview-container');preview.innerHTML='';let previewBoxS=$('#previewBoxSmall')previewBoxS.innerHTML='';this.clearCtl();}
findElementByClass(target,className){if(!target)return;return this.searchNode(target,className);}
hasEditImage(){return this.image;}
delElement(){if(!this.onMoveObj)return;let objType=this.onMoveObj.getAttribute('data-type');let id=this.onMoveObj.getAttribute(objType+'id');if(objType==='color'){this.delColorPiece(id,objType);this.colorConfig.data=this.colorConfig.data.filter(item=>item.colorId!=id);}
if(objType==='pattern'){this.delColorPiece(id,objType)}
if(objType==='text'){this.delText();}
this.hideFrame();this.onMoveObj=null;}
delText(){this.findElementByClass(this.elementsParent,'edit-text').remove();}
posOldToNew(data){let res=[];if(data){data.forEach((item)=>{let rs=item.split(',');res.push({pointx:Number(rs[0])+300,pointy:Number(rs[1])+300});})}
return res;}
getRectCenterOld(data){const getPosition=(axis,type)=>{return Math[type].apply(null,data.map((item)=>item[axis]));};const mxTop=getPosition('pointy','max');const minTop=getPosition('pointy','min');const mxLeft=getPosition('pointx','max');const minLeft=getPosition('pointx','min');const height=mxTop-minTop-10;const width=mxLeft-minLeft;return{left:minLeft,top:minTop,height,width};}
async compositeImage({left,top,width,height,zIndex,colorId,transform}){let canvas=$('#compositeCan');let imgForRender=this.findElementByClass(canvas,'single-export');const setStyle=()=>{let imgInRender=document.getElementsByClassName('single-export')[0];imgInRender.style.width=width+'px';imgInRender.style.height=height+'px';imgInRender.style.transform=transform;imgInRender.src=this.onMoveObj.getAttribute('src');imgInRender.style.zIndex=zIndex;imgInRender.style.left=left+'px';imgInRender.style.position='absolute';imgInRender.style.top=top+'px';imgInRender.style.pointerEvents='none';}
if(!this.findElementByClass(canvas,'single-export-container')){let containerForRender=this.createElement({type:'div',className:'single-export-container'})containerForRender.style.position='relative';containerForRender.style.width='100%';containerForRender.style.height='100%';imgForRender=this.createElement({type:'img',className:'single-export'})this.insertElement(containerForRender,imgForRender);this.insertElement(canvas,containerForRender);}
setStyle();}
getSliceSize(data,key='pathPoints',pointObj){let width,height,left,top;if(data.newVersion){let res=this.getRectCenter(pointObj[key]);width=res.width;height=res.height;left=res.left;top=res.top;}else{let old=this.posOldToNew(data.data);let res=this.getRectCenter(JSON.stringify(old));width=res.width;height=res.height;left=res.left;top=res.top;}
return{width,height,left,top}}
findItemByTypeId(id,index=0,layer=0){let type=this.getElementType();const previewSmall=Array.from($('#previewBoxSmall').childNodes);const elements=Array.from(previewSmall[index].childNodes);let rs=elements.find(item=>item.getAttribute('layerid')==type+layer);if(!rs){let el=this.createElement({type:'img'});el.setAttribute(type+'id',id);el.setAttribute('layerid',type+layer);this.insertElement(previewSmall[index],el);rs=el;}
return rs;}
getCurrentId(){let currentObjType=this.getElementType();return this.onMoveObj.getAttribute(currentObjType+'id');}
getRenderObj(imgInfo,colorIndex,layer){const _id=this.getCurrentId();const currentObjType=this.getElementType();let previewImg=this.findItemByTypeId(_id,colorIndex,layer);if(currentObjType==='color'){previewImg=this.findItemByTypeId(this.onMoveObj.getAttribute('colorid'),colorIndex,layer);}
if(!previewImg.getAttribute('layerid')){previewImg.setAttribute('layerid',currentObjType+layer);}
previewImg.setAttribute('data-type',currentObjType);previewImg.setAttribute(currentObjType+'id',this.onMoveObj.getAttribute(currentObjType+'id'));return{previewImg,}}
getClipPath(Bladeitem){let data=JSON.parse(Bladeitem.pathPoints);let newData=[];data.forEach((item)=>{newData.push({x:item.pointx,y:item.pointy,})})return newData;}
pathInToCss(data){console.log(data)let rs='';data.forEach((item)=>{rs+=item.x+'% '+item.y+'%,'})return rs;}
getTransform(){let deg=this.onMoveObj.style.transform;if(deg){return deg.replace(/[^\d|^\.|^\-]/g,'');}else{return''}}
async doComposite(imgInfo,colorIndex,Bladeitem,renderList,i){const currentObjType=this.getElementType();if(currentObjType==='pattern'||currentObjType==='color'){const{previewImg}=this.getRenderObj(imgInfo,colorIndex,i);const currentBlade=this.getBladeDesignCtx();let canImg=null;if(currentBlade.contents.images)canImg=currentBlade.contents.images.canvasImg;let originImg=canImg||this.onMoveObj.getAttribute('src');const{clientWidth,clientHeight,offsetLeft,offsetTop}=this.onMoveObj;let transferPos=this.getDesignSizeByPoints(Bladeitem,'pathPoints');const clipInfo=this.getSliceSize(transferPos,'clipPath',Bladeitem);const clipInfo2=this.getSliceSize(transferPos,'pathPoints',Bladeitem);const CanvasManager=new canvasManager({width:this.exportSize,height:this.exportSize})
let canvasArea=stringToArray(transferPos.data,{width:this.exportSize,height:this.exportSize});if(canvasArea.length>5){canvasArea=this.getCorrectPos(canvasArea);}
const{can,context}=this.createCan();let src,originSrc;can.width=clipInfo.width;can.height=clipInfo.height;const imgForOrigin=new Image();imgForOrigin.src=originImg;let ctxX,ctxY;let dx,dy;if(this.dataVersion==='old'){can.width=600;can.height=600;}
ctxX=offsetLeft-(this.exportSize-can.width)/2+(this.exportSize-this.canvasSize)/2;ctxY=offsetTop-(this.exportSize-can.height)/2+(this.exportSize-this.canvasSize)/2 let deg=this.getTransform();if(deg){dx=ctxX;dy=ctxY context.translate((ctxX+(clientWidth/2)),(ctxY+(clientHeight/2)));context.rotate(Math.PI/180*parseInt(deg));context.translate(-(ctxX+(clientWidth/2)),-(ctxY+(clientHeight/2)));this.onMoveObj.setAttribute('last-deg',deg);}else{context.translate(ctxX,ctxY);dx=0;dy=0;}
imgForOrigin.setAttribute("crossOrigin",'Anonymous');imgForOrigin.onload=async()=>{context.drawImage(imgForOrigin,dx,dy,clientWidth,clientHeight);originSrc=can.toDataURL('image/webp',1);canvasArea.forEach((item)=>{item.x=transferPos.newVersion?item.x*1.33:item.x;item.y=transferPos.newVersion?item.y*1.33:item.y;})previewImg.style.top='0';previewImg.style.left='0';previewImg.style.zIndex=imgInfo.zIndex;let compositedImg=await CanvasManager.genImg(canvasArea,originSrc);const canvasImg=new Image();canvasImg.src=compositedImg;canvasImg.onload=async()=>{previewImg.src=compositedImg;this.saveCompositedImg(compositedImg);this.addElToPreviewSmall(previewImg,colorIndex,Bladeitem.bladeImgId,i,Bladeitem);}
setTimeout(()=>{this.loadingPreview.style.display='none';previewImg.style.display='block';},200)}}}
saveCompositedImg(url){this.designContents.bladeList[this.currentBlade].renderImg=url;}
createCan(){let can=document.createElement('canvas');let context=can.getContext('2d');return{can,context}}
getFitSizeByTarget(previewWidth){let{offsetLeft,offsetTop,clientWidth,clientHeight}=this.onMoveObj;const editorW=this.editorBox.offsetWidth;let moved={left:'',top:'',width:'',height:'',zoom:'',zIndex:'',transform:'',innerText:'',textAlign:'',color:''}
moved.left=offsetLeft/editorW*previewWidth+'px';moved.top=offsetTop/editorW*previewWidth+'px';moved.width=clientWidth/editorW*previewWidth+'px';moved.height=clientHeight/editorW*previewWidth+'px';moved.zIndex=this.onMoveObj.style.zIndex;moved.colorId=this.onMoveObj.getAttribute('colorid')||'';moved.transform=this.onMoveObj.style.transform;moved.innerText=this.onMoveObj.innerText;moved.textAlign=this.onMoveObj.style.textAlign;moved.color=this.onMoveObj.style.color;return moved;}
findItemFromPreview(type){const currentObj=this.onMoveObj;const id=currentObj.getAttribute(type+'id');return this.findItemByTypeId(id);}
findCtrFromEditBox(type,id){return Array.from(this.editorBox.childNodes).find(item=>item.getAttribute(type+'id')===id)}
asyncPosition(target){if(!this.onMoveObj)return;const previewWidth=target.offsetWidth;let{offsetLeft,offsetTop,clientWidth,clientHeight}=this.onMoveObj;const targetType=this.getElementType();let _obj=this.findItemFromPreview(targetType);let{transform}=this.getFitSizeByTarget(previewWidth);let currentObjId=this.onMoveObj.getAttribute(targetType+'id');let currentColorCtl=this.findCtrFromEditBox(targetType,currentObjId);let imgInfo={zIndex:this.onMoveObj.style.zIndex,transform:this.onMoveObj.style.transform,}
if(targetType==='color'||targetType==='pattern'){this.compositeImage({left:offsetLeft,top:offsetTop,width:clientWidth,height:clientHeight,zIndex:imgInfo.zIndex,transform:imgInfo.transform})
const bladeId=this.defaultSample.bladeImgInfoList[this.currentBlade].bladeImgId;setTimeout(async()=>{this.defaultSample.baseImgInfoList.forEach((item,index)=>{let _bladeIdInScene=item.bladeInfoList.filter(h=>h.bladeImgId==bladeId);if(!_bladeIdInScene)return;_bladeIdInScene.forEach((t,i)=>{this.doComposite(imgInfo,index,t,_bladeIdInScene,i);})})},100)}
if(targetType==='color'){let targetId=this.onMoveObj.getAttribute('colorId');let type=this.onMoveObj.getAttribute('colortype')
_obj.style.zIndex=imgInfo.zIndex;_obj.style.transform=imgInfo.transform;this.saveColorInfo(this.onMoveObj,type,targetId);}
if(targetType==='text'){this.asyncText(_obj);}
if(!currentColorCtl)return;currentColorCtl.style.width=clientWidth+'px';currentColorCtl.style.height=clientHeight+'px';currentColorCtl.style.left=this.onMoveObj.style.left;currentColorCtl.style.top=this.onMoveObj.style.top;currentColorCtl.style.transform=transform;this.asyncPositionForFrame(this.onMoveObj,offsetLeft,offsetTop);this.selectedInfo.info=this.createObjInfo();this.historyManage.add(this.onMoveObj);this.historyManage.saveDom(this.elementsParent.cloneNode(true));this.beforeBladeChange();}
asyncText(imgForPreview){const newPos=this.getFitSizeByTarget(280);imgForPreview.innerText=newPos.innerText;imgForPreview.style.textAlign=newPos.textAlign;imgForPreview.style.color=newPos.color;imgForPreview.style.left=newPos.left;imgForPreview.style.top=newPos.top;imgForPreview.style.zIndex=newPos.zIndex;imgForPreview.style.fontSize=newPos.fontSize;imgForPreview.style.position='absolute';this.loadingPreview.style.display='none';}
getCanvasSize(){this.selectedInfo.info={width:600,height:600,zIndex:0,left:0,top:0,type:'画布',exportSize:this.exportSize}}
getElementType(){let obj=null;if(this.onMoveObj){obj=this.onMoveObj.getAttribute('data-type');}
return obj;}
findItemByAttr(parent,imageType){return Array.from(parent.childNodes).find(item=>item.getAttribute('data-type')===imageType);}
delColorPiece(id,type){const deleteItem=(obj,target)=>{Array.from(obj).forEach((item)=>{target==='pattern'&&console.log(item)if(item.getAttribute('data-type')==target&&item.getAttribute(type+'id')==id){item.remove();}});}
if(type==='color'){let colorData=this.colorConfig.data.filter(item=>item.colorId!=id);let arr=[];colorData.forEach((item)=>{if(arr.find(t=>t.colorId!=item.colorId)){arr.push(item);}})this.colorConfig.data=arr;}
deleteItem(this.editorBox.childNodes,type);deleteItem(this.elementsParent.childNodes,type);deleteItem(this.findElementByClass(this.previewBox,'preview-container').childNodes,type);let previewNode=$('#previewBoxSmall').childNodes;Array.from(previewNode).forEach((item)=>{deleteItem(item.childNodes,type);})}
createColorPiece(colorType,color){let toDataURL='';let canvas=document.createElement('canvas');let context=canvas.getContext('2d');canvas.height=this.colorConfig.size;canvas.width=this.colorConfig.size;context.fillStyle=color;if(colorType==1){context.arc(this.colorConfig.size/2,this.colorConfig.size/2,this.colorConfig.size/2,0,Math.PI*2,true);context.fill();}else{context.fillRect(0,0,this.colorConfig.size,this.colorConfig.size);}
toDataURL=canvas.toDataURL('image/webp');return toDataURL;}
setColor(color){let targetId=this.onMoveObj.getAttribute('colorId');let type=this.onMoveObj.getAttribute('colortype');this.saveColorInfo(this.onMoveObj,type,targetId);let lastColor=this.historyManage.find(this.onMoveObj);if(!lastColor){throw new Error('con not find colorId in function setColor. id:'+lastColor);}
this.delColorPiece(targetId);this.addColorPiece(lastColor.type,color,lastColor);}
colorIdExist(_colorId){const nodes=Array.from(this.elementsParent.childNodes);nodes.forEach((item)=>{if(item.getAttribute('colorId')==_colorId&&item.className==='color-piece'){item.remove();}})}
showLoading(){this.loadingPreview.style.display='block';}
getColors(){const colors=Array.from(this.elementsParent.childNodes).filter(item=>item.getAttribute('data-type')==='color');return colors;}
asyncAttrFromHis(obj,savedInfo){obj.style.width=savedInfo.width+'px';obj.style.height=savedInfo.height+'px';obj.style.left=savedInfo.left+'px';obj.style.top=savedInfo.top+'px';}
addColorPiece(type=2,color='red',lastColor=null){if(!this.sampleStatus){this.toast('当前样版信息不全。')return;}
this.showLoading();if(lastColor){type=lastColor.colorType;}
if(!this.defaultSample){this.toast('请选择样版');this.loadingPreview.style.display='none';return;}
const colors=this.getColors();if(colors.length>=this.colorMax&&!lastColor){this.toast('最多只能添加'+this.colorMax+'个色块！');return;}
let colorImg=this.createColorPiece(type,color);const _editor=this.elementsParent;let _colorId;if(this.colorConfig.data){_colorId=this.colorConfig.data.length+1;}else{_colorId=1;}
if(lastColor){_colorId=lastColor.id this.delColorPiece(_colorId,'color')}
let colorPiece=this.createElement({type:'img',className:'color-piece'});colorPiece.src=colorImg;if(lastColor){this.asyncAttrFromHis(colorPiece,lastColor);}else{colorPiece.style.width=this.colorConfig.size+'px';colorPiece.style.height=this.colorConfig.size+'px';}
colorPiece.setAttribute('data-type','color');colorPiece.setAttribute('colorid',_colorId);colorPiece.setAttribute('colortype',type);colorPiece.draggable=false;this.insertElement(_editor,colorPiece)
this.onMoveObj=colorPiece;this.frame.style.width=this.colorConfig.size+'px';this.frame.style.height=this.colorConfig.size+'px';colorPiece.style.zIndex=this.layers.length+1;this.saveColorInfo(colorPiece,type,_colorId);let colorCtl=this.createCtl({className:'color-ctl',attrs:{'colorId':_colorId,'data-type':'color'},zIndex:10+this.layers.length+1,currentObj:colorPiece});if(lastColor){this.asyncAttrFromHis(colorCtl,lastColor);}else{colorCtl.style.width=this.colorConfig.size+'px';colorCtl.style.height=this.colorConfig.size+'px';}
colorCtl.setAttribute('colorId',_colorId);colorCtl.setAttribute('data-type','color');this.layers.push(colorPiece.style.zIndex);this.insertElement(this.editorBox,colorCtl)this.resetFramePosition(0,0);this.displayPreview('color',colorPiece,this.previewBox);}
showAllColorCtl(state){setTimeout(()=>{Array.from(this.editorBox.childNodes).forEach((item,index)=>{if(item.className==='color-ctl'){item.style.display=state;item.style.left=this.colorConfig.data[item.getAttribute('colorId')-1]?.left;item.style.top=this.colorConfig.data[item.getAttribute('colorId')-1]?.top;}});const imageCtl=this.findElementByClass(this.editorBox,'pattern-ctl');imageCtl&&(imageCtl.style.display=state);},500)}
saveColorInfo(colorPiece,type,_colorId){this.colorConfig.data.push({colorId:_colorId,color:colorPiece.style.backgroundColor,size:{h:colorPiece.clientHeight,w:colorPiece.clientWidth,},type:type,left:colorPiece.offsetLeft+'px',top:colorPiece.offsetTop+'px'})}
setTextColor(val){this.onMoveObj.style.color=val;const imageInfo={};this.displayPreview('text',imageInfo,this.previewBox);}
setAlign(val){this.onMoveObj.style.textAlign=val;const imageInfo={};this.displayPreview('text',imageInfo,this.previewBox);}
addText(){let elementForText=this.createElement({type:'div',className:'edit-text'});elementForText.innerText='请输入文字';elementForText.contentEditable='true';elementForText.style.left=600/2+'px';elementForText.style.top=600/2+'px';elementForText.style.zIndex=600/2;elementForText.setAttribute('textid',1);elementForText.setAttribute('data-type','text');const imageInfo={};this.insertElement(this.elementsParent,elementForText);let textCtl=this.createElement({type:'div',className:'text-ctl',});textCtl.style.zIndex='20';textCtl.style.pointerEvents='auto';textCtl.setAttribute('textid',1);this.onMoveObj=elementForText;this.insertElement(this.editorBox,textCtl)}
getBladeId(){return this.defaultSample.bladeImgInfoList[this.currentBlade].bladeImgId;}
addImage(imageInfo,setToFit=true){console.log(imageInfo,'添加图片')
if(!imageInfo){this.toast('请传入有效的图片信息');return;}
if(!this.defaultSample){this.toast('请选择样版');return;}
if(!this.sampleStatus){this.toast('当前样版信息不全。')return;}
this.showLoading();this.designContents.bladeList[this.currentBlade].contents.images={...imageInfo};let currentImage=this.findElementByClass(this.elementsParent,'editImage');if(!currentImage){currentImage=this.createElement({type:'img',className:'editImage'})currentImage.src=imageInfo.canvasImg||imageInfo.src;this.insertElement(this.elementsParent,currentImage);this.image=currentImage;this.onMoveObj=currentImage;currentImage.draggable=false;currentImage.setAttribute('patternid',1);currentImage.setAttribute('bladeId',this.getBladeId());currentImage.setAttribute('data-type','pattern');currentImage.style.zIndex=1;this.layers.push(currentImage.style.zIndex);}else{currentImage.src=imageInfo.canvasImg||imageInfo.src;currentImage.style.width=setToFit?'100%':'auto';currentImage.style.height='auto';this.findElementByClass(this.editorBox,'pattern-ctl').remove();}
let imageCtl=this.createCtl({className:'pattern-ctl',attrs:{'el-type':'ctl','patternid':'1','data-type':'pattern'},zIndex:10+this.layers.length+1,currentObj:currentImage});this.insertElement(this.editorBox,imageCtl);currentImage.onload=()=>{setToFit&&this.setImageToFit(currentImage);this.displayPreview('pattern',imageInfo,this.previewBox);}}
createCtl(opt){let imageCtl=this.createElement({type:'div',className:opt.className,});imageCtl.style.width=opt.currentObj.style.width;imageCtl.style.height=opt.currentObj.style.height;imageCtl.style.pointerEvents='auto';imageCtl.style.zIndex=opt.zIndex;this.setAttrs(imageCtl,opt.attrs);imageCtl.addEventListener('mousedown',()=>{setTimeout(()=>{imageCtl.style.display='none';this.onMoveObj=opt.currentObj;})});return imageCtl;}
setAttrs(target,attrs){const keys=Object.keys(attrs)keys.forEach((item)=>{target.setAttribute(item,attrs[item]);})}
focusSelectedItem(obj){if(obj.id==='move'){return;}
this.onMoveObj=obj;this.frame.style.width=obj.clientWidth-4+'px';this.frame.style.height=obj.clientHeight-2+'px';this.frame.style.left=obj.offsetLeft+'px';this.frame.style.top=obj.offsetTop+'px';}
createObjInfo(){const{clientWidth,clientHeight,offsetLeft,offsetTop}=this.onMoveObj;const _this=this;const info={type:_this.getElementType(),width:clientWidth,height:clientHeight,left:offsetLeft,top:offsetTop,zIndex:_this.onMoveObj.style.zIndex,exportSize:this.exportSize,}
return info;}
setImageToCenter(target,width,height){let _left=target/2-width/2,_top=target/2-height/2;this.onMoveObj.style.left=_left+'px';this.onMoveObj.style.top=_top+'px';}
setImageToFit(currentImage){const{clientWidth,clientHeight}=currentImage;const basicSize=600;const imageOverSize=[clientWidth,clientHeight];let zoom=1;const overSize=imageOverSize.find(item=>item>basicSize);let _left,_top;if(overSize){zoom=zoom-(overSize-basicSize)/basicSize;let fitWidth=clientWidth*zoom;let fitHeight=clientHeight*zoom;currentImage.style.width=fitWidth+'px';currentImage.style.height=fitHeight+'px';this.setImageToCenter(basicSize,fitWidth,fitHeight)}else{_left=basicSize/2-clientWidth/2;_top=basicSize/2-clientHeight/2;currentImage.style.left=_left+'px';currentImage.style.top=_top+'px';}
this.asyncPositionForFrame(currentImage,_left,_top);}
getDesignSizeByPoints(pointObj=0,key='pathPoints'){let res={newVersion:false,data:[]};if(this.defaultSample){let currentPoints={...pointObj};if(currentPoints.pathPoints){res.newVersion=true;res.data=JSON.parse(currentPoints[key]);res.data=res.data.map(element=>{element.pointx=parseInt(element.pointx);element.pointy=parseInt(element.pointy);element.pointx=element.pointx-this.canvasSize/2;element.pointy=element.pointy-this.canvasSize/2;return element.pointx+','+element.pointy;})res.data.pop();}else{res.data=[currentPoints.p1,currentPoints.p2,currentPoints.p3,currentPoints.p4];}
return res;}
return[];}
getRectCenter(path){if(!path){return{left:0,top:0,height:600,width:600}}
const formatPath=(path)=>{path=eval(path);let formatedPath=[];path.forEach((item)=>{formatedPath.push({x:item.pointx,y:item.pointy,});});return formatedPath;}
if(typeof path==='string'){path=formatPath(path);}
const getPosition=(axis,type)=>{return Math[type].apply(null,path.map((item)=>item[axis]));};const mxTop=getPosition('y','max');const minTop=getPosition('y','min');const mxLeft=getPosition('x','max');const minLeft=getPosition('x','min');const height=mxTop-minTop;const width=mxLeft-minLeft;const centerY=height/2+minTop;const centerX=width/2+minLeft;return{left:minLeft,top:minTop,height,width};}
getCorrectPos(path){const getPosition=(axis,type)=>{return Math[type].apply(null,path.map((item)=>item[axis]));};const mxTop=getPosition('y','max');const minTop=getPosition('y','min');const mxLeft=getPosition('x','max');const minLeft=getPosition('x','min');return[{x:minLeft,y:minTop},{x:mxLeft,y:minTop},{x:mxLeft,y:mxTop},{x:minLeft,y:mxTop},];}
addToPreviewSmall(el){let smallBox=$('#previewBoxSmall');if(Array.from(smallBox.childNodes).find(item=>item.className.includes('item'))){return;}
const sceneList=this.defaultSample.baseImgInfoList;sceneList.forEach((item,index)=>{let el=this.createElement({type:'div',className:'item swiper-slide'});let img=this.createElement({type:'img'});img.src=item.baseImg;img.className='sample';el.appendChild(img);smallBox.appendChild(el);if(index===0){setTimeout(()=>{let preview=this.findElementByClass($('#previewBox'),'preview-container');let sample=Array.from(preview.childNodes).find(item=>item.className==='sample');if(sample){sample.src=item.baseImg;}else{preview.appendChild(img.cloneNode(true));}},300)}})}
getFlexPoints(Bladeitem){if(Bladeitem.pathPoints){let points=this.getClipPath(Bladeitem);points.forEach((item)=>{item.x=(item.x/600*100).toFixed(5);item.y=(item.y/600*100).toFixed(5);})return this.pathInToCss(points);}}
addElToPreviewSmall(element,index,bladeId,i,Bladeitem){let cssClipPath=this.getFlexPoints(Bladeitem);let smallBox=$('#previewBoxSmall');const sceneList=Array.from(smallBox.childNodes);let layerId=this.getElementType()+i+''+index;let dataType=element.getAttribute('data-type');let target=this.getElementAttVal(bladeId,sceneList[index],'bladeid',dataType);let img=element.cloneNode(true);img.setAttribute('bladeId',bladeId);if(target){let id=img.getAttribute('layerid').split(this.getElementType())[1];img.setAttribute('layerid',this.getElementType()+(parseInt(id)+1));}else{img.setAttribute('layerid',layerId);}
if(this.dataVersion==='new'){let polygon=cssClipPath.substring(0,cssClipPath.lastIndexOf(','));img.style.clipPath=`polygon(${polygon})`;element.style.clipPath=`polygon(${polygon})`}
if(this.dataVersion==='old'){if(target){target.src=img.src;}else{sceneList[index].appendChild(img);}}else{if(target){sceneList[index].appendChild(img);}}
this.switchScene(sceneList);}
switchScene(sceneList){let indexForScene=this.getScene();if(sceneList[indexForScene].childNodes.length<=1)return;setTimeout(()=>{this.findElementByClass(this.previewBox,'preview-container').innerHTML=sceneList[indexForScene].innerHTML;})}
getScene(){const currentBlade=this.currentBlade;const currentBladeId=this.defaultSample.bladeImgInfoList[currentBlade].bladeImgId;let index=0;for(let i=0;i<this.defaultSample.baseImgInfoList.length;i++){let bladeList=this.defaultSample.baseImgInfoList[i].bladeInfoList;if(bladeList&&bladeList.find(item=>item.bladeImgId==currentBladeId)){index=i;break;}}
return index;}
getElementAttVal(val,target,attrKey,dataType){return Array.from(target.childNodes).find(item=>item.getAttribute(attrKey)==val&&item.getAttribute('data-type')==dataType);}
asyncPositionForFrame(currentImage,left,top){const{clientWidth,clientHeight}=currentImage;this.frame.style.width=clientWidth-4+'px';this.frame.style.height=clientHeight-2+'px';this.frame.style.transform=currentImage.style.transform;this.showFrame();this.resetFramePosition(left,top);}
displayPreview(type,element,areaTarget){let previewImgContainer=this.searchNode(areaTarget,'preview-container');if(!previewImgContainer){previewImgContainer=this.createElement({type:'div',className:'preview-container'});this.insertElement(areaTarget,previewImgContainer);this.previewImgContainer=previewImgContainer;}
const createElementForPreview=(type)=>{let tagType=type==='text'?'div':'img';let imgForPreview=this.createElement({type:tagType});imgForPreview.setAttribute('imgType',type);if(type==='color'){imgForPreview.className='color-preview';imgForPreview.setAttribute(type+'id',this.onMoveObj.getAttribute('colorid'));}
if(type==='text'){this.asyncText(imgForPreview);}
imgForPreview.setAttribute(type+'id',this.getCurrentId());imgForPreview.draggable=false;imgForPreview.src=element.canvasImg||element.src;this.insertElement(previewImgContainer,imgForPreview);}
let _type=this.getElementType();if(!_type){createElementForPreview(type);return;}
let currentId=this.onMoveObj.getAttribute(_type+'id');const findItemInPreview=(id)=>{let _container=this.searchNode(areaTarget,'preview-container');return Array.from(_container.childNodes).find(item=>item.getAttribute(_type+'id')===id);}
switch(type){case'text':createElementForPreview(type);break;}
this.asyncPosition(areaTarget);}
createSampleForExport(src){let _element=this.createElement({type:'img',});_element.draggable=false;_element.setAttribute('imgtype','sample');_element.src=src this.insertElement(this.exportObj,_element);}
searchNode(target,node){return Array.from(target.childNodes).find(item=>item.className===node);}
createFramePoints(){const _this=this;let editorCtrl=document.createElement("div");editorCtrl.className=this.frameParentName;const parentEl=$('#move');this.framePoints.forEach((item)=>{let point=document.createElement("span");point.className=item;const setDefaultPosition=(e)=>{_this.pointA.x=e.pageX;_this.pointA.y=e.pageY;}
switch(item){case'top-right':point.addEventListener('click',()=>{_this.delElement();})break;case'top':point.onmousedown=function(e){_this.isTopHold=true;setDefaultPosition(e);}
break;case'left':point.onmousedown=function(e){_this.isLeftHold=true;console.log(e.pageX,e.pageY);setDefaultPosition(e);}
break;case'right':point.onmousedown=function(e){_this.isRightHold=true;setDefaultPosition(e);}
break;case'bottom':point.onmousedown=function(e){_this.isBottomHold=true;setDefaultPosition(e);}
break;case'left-bottom':point.onmousedown=function(e){_this.isLeftBottomHold=true;setDefaultPosition(e);}
break;case'top-left':point.onmousedown=function(e){_this.isTopLeftHold=true;setDefaultPosition(e);}
break;case'bottom-right':point.onmousedown=function(e){_this.isBottomRightHold=true;setDefaultPosition(e);}
break;}
editorCtrl.appendChild(point);})parentEl.appendChild(editorCtrl);this.createRotationBtn(parentEl);this.addZoomListener();}
createRotationBtn(container){const _this=this;const rotationCtl=this.createElement({type:'span',id:'rotationCtl'});rotationCtl.onmousedown=function(e){_this.pointA.x=_this.editorBox.clientWidth/2+_this.editorBox.offsetLeft;_this.pointA.y=_this.editorBox.clientHeight/2+_this.editorBox.offsetTop;_this.currentAction='rotate';_this.isHold=true;_this.pointB.x=e.pageX;_this.pointB.y=e.pageY-58;if(_this.allAngel===0){_this.pointA.x=e.pageX-_this.editorBox.clientWidth/2;_this.pointA.y=e.pageY-_this.editorBox.clientHeight/2;_this.count=1;}
if(_this.onMoveObj.style.transform){let rotate=_this.onMoveObj.style.transform;_this.allAngel=Number(rotate.replace(/[^\d-]/g,''));}}
container.appendChild(rotationCtl);}
resetFramePosition(left,top){this.frame.style.left=left+'px';this.frame.style.top=top+'px';}
addZoomListener(){this.editorBox.addEventListener("mousewheel",(event)=>{let delta=0;if(!event)event=window.event;if(event.wheelDelta){delta=event.wheelDelta/120;if(window.opera)delta=-delta;}else if(event.detail){delta=-event.detail/3;}
let width=this.onMoveObj.offsetWidth;let height=this.onMoveObj.offsetHeight;let zoomInWidth=width*1.1+"px";let zoomInHeight=height*1.1+"px";let zoomOutWidth=width*0.9+"px";let zoomOutHeight=height*0.9+"px";if(delta>0){this.onMoveObj.style.width=zoomInWidth;this.onMoveObj.style.height=zoomInHeight;this.frame.style.width=zoomInWidth;this.frame.style.height=zoomInHeight;}else if(delta<0){if(width>200){this.onMoveObj.style.width=zoomOutWidth;this.onMoveObj.style.height=zoomOutHeight;this.frame.style.width=zoomOutWidth;this.frame.style.height=zoomOutHeight;}}
this.asyncPosition(this.previewBox);},false);}
removeFrameMouseEvent(){this.frame.onmousedown=null;this.frame.style.pointerEvents='none';this.frame.onmousemove=null;this.frame.onmouseup=null;}
async exportImage(){if(!domtoimage){throw new Error('domtoimage is not installed!');}
if(!this.onMoveObj)return false;const nodeElement=this.findElementByClass(this.exportObj,'preview-container');let base64Img=await domtoimage.toPng(nodeElement,{width:this.exportSize,height:this.exportSize,});return base64Img}
genImgForAction(action){let singleComposite=$('#compositeCan');let singleCompBox=this.findElementByClass(singleComposite,'single-export-container');let singleCompImg=this.findElementByClass(singleCompBox,'single-export');let previewBox=this.findElementByClass(this.previewBox,'preview-container');let previewImg=this.findItemByAttr(previewBox,'pattern');singleCompImg.src=previewImg.src;const transform=this.onMoveObj.style.transform;if(!transform)return;singleCompImg.style.transform=transform;}
toolKit(key){if(!this.onMoveObj)return const canvasWidth=600;const currentObj=this.onMoveObj;let{clientWidth,clientHeight}=currentObj;let currentIndex=parseInt(currentObj.style.zIndex);const currentObjType=this.getElementType();let currentColorCtl=null;if(currentObjType==='image'){currentColorCtl=Array.from(this.editorBox.childNodes).find(item=>item.className==='pattern-ctl');}
if(currentObjType==='color'){currentColorCtl=Array.from(this.editorBox.childNodes).find(item=>item.getAttribute('colorid')===currentObj.getAttribute('colorid'));}
const actions={layerUp:()=>{const designElements=Array.from(this.elementsParent.childNodes);let currentEl=designElements.find(item=>item.style.zIndex==currentIndex);console.log(currentEl,'当前的编辑内容',currentIndex)
for(let i=0;i<designElements.length;i++){if(designElements[i]?.style.zIndex>=currentEl.style.zIndex){currentEl.style.zIndex=parseInt(designElements[i].style.zIndex)+1;currentColorCtl&&(currentColorCtl.style.zIndex=parseInt(currentEl.style.zIndex)+10);break;}}},layerDown:()=>{const designElements=Array.from(this.elementsParent.childNodes);let currentEl=designElements.find(item=>item.style.zIndex==currentIndex);console.log(currentEl,'当前的编辑内容',currentIndex)
for(let i=0;i<designElements.length;i++){if(designElements[i]?.style.zIndex<=currentEl.style.zIndex){currentEl.style.zIndex=parseInt(designElements[i].style.zIndex)-1;currentColorCtl&&(currentColorCtl.style.zIndex=parseInt(currentEl.style.zIndex)+10);break;}}},fullCover:()=>{let smallerVal=[clientWidth,clientHeight].find(item=>item<canvasWidth);let diff=canvasWidth/smallerVal;currentObj.style.width=clientWidth*diff+'px';currentObj.style.height=clientHeight*diff+'px';this.setImageToCenter(canvasWidth,clientWidth*diff,clientHeight*diff);},maxWidth:()=>{currentObj.style.width=canvasWidth+'px';this.setImageToCenter(canvasWidth,currentObj.clientWidth,currentObj.clientHeight);},maxHeight:()=>{currentObj.style.height=canvasWidth+'px';this.setImageToCenter(canvasWidth,currentObj.clientWidth,currentObj.clientHeight);},mirrorX:async(axis='mirrowx',rotate='rotateY')=>{let oldTransform=currentObj.getAttribute(rotate);currentObj.style.transform=oldTransform==''+rotate+'(180deg)'?''+rotate+'(0deg)':''+rotate+'(180deg)';currentObj.setAttribute(rotate,currentObj.style.transform);const boxForRepeat=this.createElement({type:'div',className:'repeat-box'});boxForRepeat.style.width=currentObj.offsetWidth+'px';let img=this.designContents.bladeList[this.currentBlade].contents.images.src;let mirrorImg=this.createElement({type:'img'});mirrorImg.src=img;mirrorImg.style.width=currentObj.offsetWidth+'px';mirrorImg.style.height=currentObj.offsetHeight+'px';boxForRepeat.appendChild(mirrorImg)$('#app').appendChild(boxForRepeat);if(!domtoimage){throw new Error('domtoimage is not installed!');}
if(currentObj.getAttribute('rotatex')&&currentObj.getAttribute('rotatey')){mirrorImg.style.transform=currentObj.getAttribute('rotatex')+currentObj.getAttribute('rotatey');}else{mirrorImg.style.transform=currentObj.style.transform;}
currentObj.src=await domtoimage.toPng(boxForRepeat,{quality:'1',});mirrorImg.remove()currentObj.style.transform='';},mirrorY:function(){this.mirrorX('mirrowy','rotateX');},centerW:()=>{let _left=canvasWidth/2-currentObj.clientWidth/2;currentObj.style.left=_left+'px';},centerH:()=>{let _top=canvasWidth/2-currentObj.clientHeight/2;currentObj.style.top=_top+'px';},repeat:async(type='full')=>{const boxForRepeat=this.createElement({type:'div',className:'repeat-box'});let img=this.onMoveObj.src;boxForRepeat.style.width='600px';boxForRepeat.style.height='600px';switch(type){case'full':boxForRepeat.style.background=`url(${img})repeat`;boxForRepeat.style.backgroundSize=this.onMoveObj.clientWidth+'px';break;case'x':boxForRepeat.style.height=this.onMoveObj.clientHeight+'px';boxForRepeat.style.background=`url(${img})repeat`;boxForRepeat.style.backgroundSize=this.onMoveObj.clientWidth+'px';boxForRepeat.style.backgroundRepeat='repeat-x';break;case'y':boxForRepeat.style.width=this.onMoveObj.clientWidth+'px';boxForRepeat.style.background=`url(${img})repeat`;boxForRepeat.style.backgroundSize=this.onMoveObj.clientWidth+'px';boxForRepeat.style.backgroundRepeat='repeat-y';break;}
$('#app').appendChild(boxForRepeat);if(!domtoimage){throw new Error('domtoimage is not installed!');}
let canvasImg=await domtoimage.toPng(boxForRepeat);Object.assign(this.designContents.bladeList[this.currentBlade].contents.images,{canvasImg:canvasImg});this.addImage({canvasImg:canvasImg},false);boxForRepeat.remove();},repeatX(){this.repeat('x');},repeatY(){this.repeat('y')}}
actions[key]&&actions[key]();if(key!=='exportImage'){this.showLoading()this.asyncPosition(this.previewBox);}}
onRotate(e){const _this=this;_this.pointC.x=e.pageX;_this.pointC.y=e.pageY-58;let AB={},AC={};AB.x=(_this.pointB.x-_this.pointA.x);AB.y=(_this.pointB.y-_this.pointA.y);AC.x=(_this.pointC.x-_this.pointA.x);AC.y=(_this.pointC.y-_this.pointA.y);let direct=(AB.x*AC.y)-(AB.y*AC.x);let lengthAB=Math.sqrt(Math.pow(_this.pointA.x-_this.pointB.x,2)+Math.pow(_this.pointA.y-_this.pointB.y,2)),lengthAC=Math.sqrt(Math.pow(_this.pointA.x-_this.pointC.x,2)+Math.pow(_this.pointA.y-_this.pointC.y,2)),lengthBC=Math.sqrt(Math.pow(_this.pointB.x-_this.pointC.x,2)+Math.pow(_this.pointB.y-_this.pointC.y,2));let cosA=(Math.pow(lengthAB,2)+Math.pow(lengthAC,2)-Math.pow(lengthBC,2))/(2*lengthAB*lengthAC);let angleA=Math.round(Math.acos(cosA)*180/Math.PI);let allAngel=0;if(direct<0){allAngel=-angleA;}else{allAngel=angleA;}
if(_this.allAngel){allAngel+=_this.allAngel;}
_this.onMoveObj.style.transform=`rotate(${allAngel}
deg)`;_this.frame.style.transform=`rotate(${allAngel}
deg)`;}
onMove(e){const _this=this;e=e||window.event;_this.showAllColorCtl('none');let x=e.clientX,y=e.clientY;if(!_this.onMoveObj)return;_this.onMoveObj.style.left=x-_this.disX+"px";_this.onMoveObj.style.top=y-_this.disY+"px";let currentColorId=_this.onMoveObj.getAttribute('colorId');if(currentColorId){let currentIndex=currentColorId-1;if(_this.colorConfig.data[currentIndex]){_this.colorConfig.data[currentIndex].left=x-_this.disX+"px";_this.colorConfig.data[currentIndex].top=y-_this.disY+"px";}}else{let type=_this.getElementType();let currentImageCtl=_this.findElementByClass(_this.editorBox,type+'-ctl');currentImageCtl.style.left=x-_this.disX+"px";currentImageCtl.style.top=y-_this.disY+"px";}
_this.frame.style.left=_this.defaultLeft+x-_this.disX+"px";_this.frame.style.top=_this.defaultTop+y-_this.disY+"px";}
topOnMove(e){let dis={...this.pointA};let lastY=e.pageY;if(this.objDefParams.height+(dis.y-lastY)<10)return;this.onMoveObj.style.height=this.objDefParams.height+(dis.y-lastY)+'px';this.onMoveObj.style.top=this.objDefParams.top-(dis.y-lastY)+'px';this.asyncPositionForFrame(this.onMoveObj,this.onMoveObj.offsetLeft,this.onMoveObj.offsetTop);}
leftOnMove(e){let lastX=e.pageX;let dis={...this.pointA};let width,left;let diff=lastX-dis.x;if(diff>0){width=this.objDefParams.width-diff+'px';left=this.objDefParams.left+diff+'px';}else{width=this.objDefParams.width+(dis.x-lastX)+'px';left=this.objDefParams.left-(dis.x-lastX)+'px';}
if(width.split('px')[0]<10)return;this.onMoveObj.style.width=width;this.onMoveObj.style.left=left;this.asyncPositionForFrame(this.onMoveObj,this.onMoveObj.offsetLeft,this.onMoveObj.offsetTop);}
rightOnMove(e){let lastX=e.pageX;let dis={...this.pointA};let width,left;let diff=lastX-dis.x;if(diff>0){width=this.objDefParams.width+diff+'px';}else{width=this.objDefParams.width-(dis.x-lastX)+'px';}
if(width.split('px')[0]<10)return;this.onMoveObj.style.width=width;this.asyncPositionForFrame(this.onMoveObj,this.onMoveObj.offsetLeft,this.onMoveObj.offsetTop);}
bottomOnMove(e){let dis={...this.pointA};let lastY=e.pageY;if(this.objDefParams.height+(lastY-dis.y)<10)return;this.onMoveObj.style.height=this.objDefParams.height+(lastY-dis.y)+'px';this.asyncPositionForFrame(this.onMoveObj,this.onMoveObj.offsetLeft,this.onMoveObj.offsetTop);}
leftTopOnMove(e){const{width,height}=this.objDefParams;let dis={...this.pointA};let lastY=e.pageY;let lastX=e.pageX;let diff=lastY-dis.y;if(diff<0){diff=diff.toString().split('-')[1];}
let percent=Number(diff)/this.objDefParams.width;if(lastY-dis.y<0){this.onMoveObj.style.width=width+width*percent+'px';this.onMoveObj.style.height=height+height*percent+'px';}else{if(this.onMoveObj.offsetWidth<=26)return;this.onMoveObj.style.width=width-width*percent+'px';this.onMoveObj.style.height=height-height*percent+'px';}
this.asyncPositionForFrame(this.onMoveObj,this.onMoveObj.offsetLeft,this.onMoveObj.offsetTop);}
leftBottomOnMove(e){this.bottomRightOnMove(e);}
bottomRightOnMove(e){let dis={...this.pointA};let lastY=e.pageY;let lastX=e.pageX;let diff=lastY-dis.y;if(diff<0){diff=diff.toString().split('-')[1];}
const{width,height}=this.objDefParams;let percent=Number(diff)/this.objDefParams.width;if(lastY-dis.y<0){this.onMoveObj.style.width=width-width*percent+'px';this.onMoveObj.style.height=height-height*percent+'px';}else{if(this.onMoveObj.offsetWidth<=26)return;this.onMoveObj.style.width=width+width*percent+'px';this.onMoveObj.style.height=height+height*percent+'px';}
this.asyncPositionForFrame(this.onMoveObj,this.onMoveObj.offsetLeft,this.onMoveObj.offsetTop);}
nextStep(){this.hideFrame();let history=this.historyManage.getDom('next');if(!history)return;this.elementsParent.innerHTML='';this.reloadHistory(history)}
preStep(){this.hideFrame();let history=this.historyManage.getDom('pre');if(!history)return;this.elementsParent.innerHTML='';this.reloadHistory(history)}
reloadHistory(history){Array.from(history.childNodes).forEach((item)=>{let type=item.getAttribute('data-type');let id=item.getAttribute(type+'id');let cloneEl=item.cloneNode(true);this.elementsParent.appendChild(cloneEl);let ctl=this.findCtrFromEditBox(type,id);ctl.style.width=cloneEl.style.width;ctl.style.height=cloneEl.style.height;ctl.style.top=cloneEl.style.top;ctl.style.left=cloneEl.style.left;ctl.addEventListener('mousedown',()=>{setTimeout(()=>{ctl.style.display='none';this.onMoveObj=cloneEl;this.asyncPositionForFrame(cloneEl)this.showFrame();})})})}}